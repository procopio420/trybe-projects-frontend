{"ast":null,"code":"var _jsxFileName = \"/home/procopio/Projetos/goStack/primeiro-projeto-react/src/pages/Dashboard/index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\nimport { Link } from 'react-router-dom';\nimport api from '../../services/api';\nimport logoImg from \"../../assets/logo.svg\";\nimport { Title, Form, Repositories, Error } from './styles';\n\nconst Dashboard = () => {\n  const [newRepoOwner, setNewRepoOwner] = useState('');\n  const [newRepoName, setNewRepoName] = useState('');\n  const [inputErrorOwner, setInputErrorOwner] = useState('');\n  const [inputErrorName, setInputErrorName] = useState('');\n  const [repositories, setRepositories] = useState(() => {\n    const storagedRepositories = localStorage.getItem('@GithubExplorer:repositories');\n\n    if (storagedRepositories) {\n      return JSON.parse(storagedRepositories);\n    }\n\n    return [];\n  });\n  useEffect(() => {\n    localStorage.setItem('@GithubExplorer:repositories', JSON.stringify(repositories));\n  }, [repositories]);\n\n  async function handleAddRepository(event) {\n    event.preventDefault();\n    setInputErrorName('');\n    setInputErrorOwner('');\n\n    if (!newRepoOwner) {\n      setInputErrorOwner('Digite o autor do reposit처rio!');\n      return false;\n    }\n\n    if (!newRepoName) {\n      setInputErrorName('Digite o nome do reposit처rio!');\n      return false;\n    }\n\n    try {\n      const response = await api.get(`repos/${newRepoOwner}/${newRepoName}`);\n      const repository = response.data;\n      setRepositories([...repositories, repository]);\n      setNewRepoOwner('');\n      setNewRepoName('');\n      setInputErrorName('');\n      setInputErrorOwner('');\n    } catch (e) {\n      setInputErrorOwner('Autor/reposit처rio n찾o encontrado. Tente novamente!');\n      setInputErrorName('');\n    }\n\n    return true;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    alt: \"Github Explorer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"Explore reposit\\xF3rios no Github\"), /*#__PURE__*/React.createElement(Form, {\n    hasError: !!(inputErrorOwner || inputErrorName),\n    onSubmit: handleAddRepository,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: newRepoOwner,\n    onChange: e => setNewRepoOwner(e.target.value),\n    placeholder: \"Digite o nome do usu\\xE1rio\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: newRepoName,\n    onChange: e => setNewRepoName(e.target.value),\n    placeholder: \"Digite o nome do reposit\\xF3rio\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \"Pesquisar\")), inputErrorOwner && /*#__PURE__*/React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 27\n    }\n  }, inputErrorOwner), inputErrorName && /*#__PURE__*/React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 26\n    }\n  }, inputErrorName), /*#__PURE__*/React.createElement(Repositories, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, repositories.map(repository => /*#__PURE__*/React.createElement(Link, {\n    key: repository.full_name,\n    to: `/repository/${repository.full_name}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: repository.owner.avatar_url,\n    alt: repository.owner.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, repository.full_name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, repository.description)), /*#__PURE__*/React.createElement(FiChevronRight, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/procopio/Projetos/goStack/primeiro-projeto-react/src/pages/Dashboard/index.tsx"],"names":["React","useState","useEffect","FiChevronRight","Link","api","Title","Form","Repositories","Error","Dashboard","newRepoOwner","setNewRepoOwner","newRepoName","setNewRepoName","inputErrorOwner","setInputErrorOwner","inputErrorName","setInputErrorName","repositories","setRepositories","storagedRepositories","localStorage","getItem","JSON","parse","setItem","stringify","handleAddRepository","event","preventDefault","response","get","repository","data","e","logoImg","target","value","map","full_name","owner","avatar_url","login","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, FormEvent } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\nimport { Link } from 'react-router-dom';\nimport api from '../../services/api';\n\nimport logoImg from '../../assets/logo.svg';\n\nimport { Title, Form, Repositories, Error } from './styles';\n\ninterface Repository {\n  full_name: string;\n  description: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\nconst Dashboard: React.FC = () => {\n  const [newRepoOwner, setNewRepoOwner] = useState('');\n  const [newRepoName, setNewRepoName] = useState('');\n  const [inputErrorOwner, setInputErrorOwner] = useState('');\n  const [inputErrorName, setInputErrorName] = useState('');\n  const [repositories, setRepositories] = useState<Repository[]>(() => {\n    const storagedRepositories = localStorage.getItem(\n      '@GithubExplorer:repositories',\n    );\n    if (storagedRepositories) {\n      return JSON.parse(storagedRepositories);\n    }\n    return [];\n  });\n\n  useEffect(() => {\n    localStorage.setItem(\n      '@GithubExplorer:repositories',\n      JSON.stringify(repositories),\n    );\n  }, [repositories]);\n\n  async function handleAddRepository(\n    event: FormEvent<HTMLFormElement>,\n  ): Promise<boolean> {\n    event.preventDefault();\n\n    setInputErrorName('');\n    setInputErrorOwner('');\n\n    if (!newRepoOwner) {\n      setInputErrorOwner('Digite o autor do reposit처rio!');\n      return false;\n    }\n    if (!newRepoName) {\n      setInputErrorName('Digite o nome do reposit처rio!');\n      return false;\n    }\n\n    try {\n      const response = await api.get<Repository>(\n        `repos/${newRepoOwner}/${newRepoName}`,\n      );\n      const repository = response.data;\n\n      setRepositories([...repositories, repository]);\n      setNewRepoOwner('');\n      setNewRepoName('');\n      setInputErrorName('');\n      setInputErrorOwner('');\n    } catch (e) {\n      setInputErrorOwner('Autor/reposit처rio n찾o encontrado. Tente novamente!');\n      setInputErrorName('');\n    }\n    return true;\n  }\n\n  return (\n    <>\n      <img src={logoImg} alt=\"Github Explorer\" />\n      <Title>Explore reposit처rios no Github</Title>\n\n      <Form\n        hasError={!!(inputErrorOwner || inputErrorName)}\n        onSubmit={handleAddRepository}\n      >\n        <input\n          value={newRepoOwner}\n          onChange={(e) => setNewRepoOwner(e.target.value)}\n          placeholder=\"Digite o nome do usu찼rio\"\n          type=\"text\"\n        />\n\n        <input\n          value={newRepoName}\n          onChange={(e) => setNewRepoName(e.target.value)}\n          placeholder=\"Digite o nome do reposit처rio\"\n          type=\"text\"\n        />\n        <button type=\"submit\">Pesquisar</button>\n      </Form>\n\n      {inputErrorOwner && <Error>{inputErrorOwner}</Error>}\n      {inputErrorName && <Error>{inputErrorName}</Error>}\n\n      <Repositories>\n        {repositories.map((repository) => (\n          <Link\n            key={repository.full_name}\n            to={`/repository/${repository.full_name}`}\n          >\n            <img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <div>\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </div>\n\n            <FiChevronRight size={20} />\n          </Link>\n        ))}\n      </Repositories>\n    </>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}