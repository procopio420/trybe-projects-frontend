{"ast":null,"code":"var _jsxFileName = \"/home/procopio/Projetos/trybe-github/src/pages/Dashboard/index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { FiChevronRight, FiX } from 'react-icons/fi';\nimport { Link } from 'react-router-dom';\nimport api from '../../services/api';\nimport logoImg from \"../../assets/logo.svg\";\nimport { Title, Form, Repositories, Error, Repository } from './styles';\n\nconst Dashboard = () => {\n  const [team, setTeam] = useState('');\n  const [newRepoName, setNewRepoName] = useState('');\n  const [inputError, setInputError] = useState('');\n  const [repositories, setRepositories] = useState(() => {\n    const storagedRepositories = localStorage.getItem('@GithubExplorer:repositories');\n\n    if (storagedRepositories) {\n      return JSON.parse(storagedRepositories);\n    }\n\n    return [];\n  });\n  useEffect(() => {\n    localStorage.setItem('@GithubExplorer:repositories', JSON.stringify(repositories));\n  }, [repositories]);\n\n  async function handleAddRepository(event) {\n    event.preventDefault();\n    setInputError('');\n\n    if (!team) {\n      setInputError('Digite o número da turma!');\n      return false;\n    }\n\n    try {\n      const name = `sd-0${team}`;\n      const response = await api.get(`users/tryber/repos`);\n      const allRepositories = response.data;\n      const repositoriesFromTeam = allRepositories.filter(rep => rep.name.startsWith(name));\n      console.log(allRepositories);\n      console.log(repositoriesFromTeam); // setRepositories([...repositories, repository]);\n      // setNewRepoName('');\n      // setInputError('');\n    } catch (e) {\n      setInputError('Erro! Turma não encontrada, por favor, digite o número da turma (1-5).');\n    }\n\n    return true;\n  }\n\n  async function handleDeleteRepository(repo) {\n    const newRepositories = await repositories.filter(rep => rep.full_name !== repo.full_name);\n    localStorage.setItem('@GithubExplorer:repositories', JSON.stringify(newRepositories));\n    setRepositories(newRepositories);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    alt: \"Github Explorer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, \"Acompanhe os projetos Trybe\"), /*#__PURE__*/React.createElement(Form, {\n    hasError: !!inputError,\n    onSubmit: handleAddRepository,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: team,\n    onChange: e => setTeam(e.target.value),\n    placeholder: \"Digite a turma: (ex.: 1)\",\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Pesquisar\")), inputError && /*#__PURE__*/React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 22\n    }\n  }, inputError), /*#__PURE__*/React.createElement(Repositories, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, repositories.map(repository => /*#__PURE__*/React.createElement(Repository, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDeleteRepository(repository),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FiX, {\n    size: 30,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    key: repository.full_name,\n    to: `/repository/${repository.full_name}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: repository.owner.avatar_url,\n    alt: repository.owner.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, repository.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, repository.description))), /*#__PURE__*/React.createElement(FiChevronRight, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/procopio/Projetos/trybe-github/src/pages/Dashboard/index.tsx"],"names":["React","useState","useEffect","FiChevronRight","FiX","Link","api","Title","Form","Repositories","Error","Repository","Dashboard","team","setTeam","newRepoName","setNewRepoName","inputError","setInputError","repositories","setRepositories","storagedRepositories","localStorage","getItem","JSON","parse","setItem","stringify","handleAddRepository","event","preventDefault","name","response","get","allRepositories","data","repositoriesFromTeam","filter","rep","startsWith","console","log","e","handleDeleteRepository","repo","newRepositories","full_name","logoImg","target","value","map","repository","owner","avatar_url","login","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAAsD,OAAtD;AACA,SAASC,cAAT,EAAyBC,GAAzB,QAAoC,gBAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;;AAIA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,YAAtB,EAAoCC,KAApC,EAA2CC,UAA3C,QAA6D,UAA7D;;AAYA,MAAMC,SAAmB,GAAG,MAAM;AAChC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACgB,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACkB,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAAe,MAAM;AACnE,UAAMoB,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAC3B,8BAD2B,CAA7B;;AAGA,QAAIF,oBAAJ,EAA0B;AACxB,aAAOG,IAAI,CAACC,KAAL,CAAWJ,oBAAX,CAAP;AACD;;AACD,WAAO,EAAP;AACD,GAR+C,CAAhD;AAUAnB,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,YAAY,CAACI,OAAb,CACE,8BADF,EAEEF,IAAI,CAACG,SAAL,CAAeR,YAAf,CAFF;AAID,GALQ,EAKN,CAACA,YAAD,CALM,CAAT;;AAOA,iBAAeS,mBAAf,CACEC,KADF,EAEoB;AAClBA,IAAAA,KAAK,CAACC,cAAN;AACAZ,IAAAA,aAAa,CAAC,EAAD,CAAb;;AAEA,QAAI,CAACL,IAAL,EAAW;AACTK,MAAAA,aAAa,CAAC,2BAAD,CAAb;AACA,aAAO,KAAP;AACD;;AAED,QAAI;AACF,YAAMa,IAAI,GAAI,OAAMlB,IAAK,EAAzB;AACA,YAAMmB,QAAQ,GAAG,MAAM1B,GAAG,CAAC2B,GAAJ,CAAuB,oBAAvB,CAAvB;AACA,YAAMC,eAAe,GAAGF,QAAQ,CAACG,IAAjC;AAEA,YAAMC,oBAAoB,GAAGF,eAAe,CAACG,MAAhB,CAAwBC,GAAD,IAAOA,GAAG,CAACP,IAAJ,CAASQ,UAAT,CAAoBR,IAApB,CAA9B,CAA7B;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYP,eAAZ;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYL,oBAAZ,EAPE,CAQF;AACA;AACA;AACD,KAXD,CAWE,OAAOM,CAAP,EAAU;AACVxB,MAAAA,aAAa,CACX,wEADW,CAAb;AAGD;;AACD,WAAO,IAAP;AACD;;AAED,iBAAeyB,sBAAf,CAAsCC,IAAtC,EAAuE;AACrE,UAAMC,eAAe,GAAG,MAAM1B,YAAY,CAACkB,MAAb,CAC3BC,GAAD,IAASA,GAAG,CAACQ,SAAJ,KAAkBF,IAAI,CAACE,SADJ,CAA9B;AAGAxB,IAAAA,YAAY,CAACI,OAAb,CACE,8BADF,EAEEF,IAAI,CAACG,SAAL,CAAekB,eAAf,CAFF;AAIAzB,IAAAA,eAAe,CAACyB,eAAD,CAAf;AACD;;AACD,sBACE,uDACE;AAAK,IAAA,GAAG,EAAEE,OAAV;AAAmB,IAAA,GAAG,EAAC,iBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAFF,eAIE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAE,CAAC,CAAC9B,UAAlB;AAA8B,IAAA,QAAQ,EAAEW,mBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,KAAK,EAAEf,IADT;AAEE,IAAA,QAAQ,EAAG6B,CAAD,IAAO5B,OAAO,CAAC4B,CAAC,CAACM,MAAF,CAASC,KAAV,CAF1B;AAGE,IAAA,WAAW,EAAC,0BAHd;AAIE,IAAA,IAAI,EAAC,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPF,CAJF,EAcGhC,UAAU,iBAAI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,UAAR,CAdjB,eAgBE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,YAAY,CAAC+B,GAAb,CAAkBC,UAAD,iBAChB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAE,MAAMR,sBAAsB,CAACQ,UAAD,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,IAAD;AACE,IAAA,GAAG,EAAEA,UAAU,CAACL,SADlB;AAEE,IAAA,EAAE,EAAG,eAAcK,UAAU,CAACL,SAAU,EAF1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AACE,IAAA,GAAG,EAAEK,UAAU,CAACC,KAAX,CAAiBC,UADxB;AAEE,IAAA,GAAG,EAAEF,UAAU,CAACC,KAAX,CAAiBE,KAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASH,UAAU,CAACpB,IAApB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIoB,UAAU,CAACI,WAAf,CAFF,CARF,CAJF,eAiBE,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADD,CADH,CAhBF,CADF;AA0CD,CAvGD;;AAyGA,eAAe3C,SAAf","sourcesContent":["import React, { useState, useEffect, FormEvent } from 'react';\nimport { FiChevronRight, FiX } from 'react-icons/fi';\nimport { Link } from 'react-router-dom';\nimport api from '../../services/api';\n\nimport logoImg from '../../assets/logo.svg';\n\nimport { Title, Form, Repositories, Error, Repository } from './styles';\n\ninterface Repository {\n  full_name: string;\n  name: string;\n  description: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\nconst Dashboard: React.FC = () => {\n  const [team, setTeam] = useState('');\n  const [newRepoName, setNewRepoName] = useState('');\n  const [inputError, setInputError] = useState('');\n  const [repositories, setRepositories] = useState<Repository[]>(() => {\n    const storagedRepositories = localStorage.getItem(\n      '@GithubExplorer:repositories',\n    );\n    if (storagedRepositories) {\n      return JSON.parse(storagedRepositories);\n    }\n    return [];\n  });\n\n  useEffect(() => {\n    localStorage.setItem(\n      '@GithubExplorer:repositories',\n      JSON.stringify(repositories),\n    );\n  }, [repositories]);\n\n  async function handleAddRepository(\n    event: FormEvent<HTMLFormElement>,\n  ): Promise<boolean> {\n    event.preventDefault();\n    setInputError('');\n\n    if (!team) {\n      setInputError('Digite o número da turma!');\n      return false;\n    }\n\n    try {\n      const name = `sd-0${team}`;\n      const response = await api.get<Repository[]>(`users/tryber/repos`);\n      const allRepositories = response.data;\n\n      const repositoriesFromTeam = allRepositories.filter((rep)=>rep.name.startsWith(name));\n      console.log(allRepositories)\n      console.log(repositoriesFromTeam);\n      // setRepositories([...repositories, repository]);\n      // setNewRepoName('');\n      // setInputError('');\n    } catch (e) {\n      setInputError(\n        'Erro! Turma não encontrada, por favor, digite o número da turma (1-5).',\n      );\n    }\n    return true;\n  }\n\n  async function handleDeleteRepository(repo: Repository): Promise<void> {\n    const newRepositories = await repositories.filter(\n      (rep) => rep.full_name !== repo.full_name,\n    );\n    localStorage.setItem(\n      '@GithubExplorer:repositories',\n      JSON.stringify(newRepositories),\n    );\n    setRepositories(newRepositories);\n  }\n  return (\n    <>\n      <img src={logoImg} alt=\"Github Explorer\" />\n      <Title>Acompanhe os projetos Trybe</Title>\n\n      <Form hasError={!!inputError} onSubmit={handleAddRepository}>\n        <input\n          value={team}\n          onChange={(e) => setTeam(e.target.value)}\n          placeholder=\"Digite a turma: (ex.: 1)\"\n          type=\"number\"\n        />\n        <button type=\"submit\">Pesquisar</button>\n      </Form>\n\n      {inputError && <Error>{inputError}</Error>}\n\n      <Repositories>\n        {repositories.map((repository) => (\n          <Repository>\n            <button onClick={() => handleDeleteRepository(repository)}>\n              <FiX size={30} />\n            </button>\n            <Link\n              key={repository.full_name}\n              to={`/repository/${repository.full_name}`}\n            >\n              <img\n                src={repository.owner.avatar_url}\n                alt={repository.owner.login}\n              />\n              <div>\n                <strong>{repository.name}</strong>\n                <p>{repository.description}</p>\n              </div>\n            </Link>\n            <FiChevronRight size={20} />\n          </Repository>\n        ))}\n      </Repositories>\n    </>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}