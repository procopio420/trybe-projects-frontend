{"ast":null,"code":"var _jsxFileName = \"/home/procopio/Projetos/goStack/primeiro-projeto-react/src/pages/Dashboard/index.tsx\";\nimport React, { useState } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\nimport api from '../../services/api';\nimport logoImg from \"../../assets/logo.svg\";\nimport { Title, Form, Repositories, DivError, Error } from './styles';\n\nconst Dashboard = () => {\n  const [newRepoOwner, setNewRepoOwner] = useState('');\n  const [newRepoName, setNewRepoName] = useState('');\n  const [inputErrorOwner, setInputErrorOwner] = useState('');\n  const [inputErrorName, setInputErrorName] = useState('');\n  const [repositories, setRepositories] = useState([]);\n\n  async function handleAddRepository(event) {\n    event.preventDefault();\n    setInputErrorName('');\n    setInputErrorOwner('');\n\n    if (!newRepoOwner) {\n      setInputErrorOwner('Digite o autor do repositório!');\n\n      if (!newRepoName) {\n        setInputErrorName('Digite o nome do repositório!');\n      }\n\n      return false;\n    }\n\n    if (!newRepoName) {\n      setInputErrorName('Digite o nome do repositório!');\n      return;\n    }\n\n    try {\n      const response = await api.get(`repos/${newRepoOwner}/${newRepoName}`);\n      const repository = response.data;\n      setRepositories([...repositories, repository]);\n      setNewRepoOwner('');\n      setNewRepoName('');\n    } catch (e) {\n      setInputErrorOwner('Autor/repositório não encontrado. Tente novamente!');\n      setInputErrorName('');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    alt: \"Github Explorer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Explore reposit\\xF3rios no Github\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleAddRepository,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: newRepoOwner,\n    onChange: e => setNewRepoOwner(e.target.value),\n    placeholder: \"Digite o nome do usu\\xE1rio\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: newRepoName,\n    onChange: e => setNewRepoName(e.target.value),\n    placeholder: \"Digite o nome do reposit\\xF3rio\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Pesquisar\")), inputErrorName && inputErrorOwner && /*#__PURE__*/React.createElement(DivError, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, inputErrorOwner), /*#__PURE__*/React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, inputErrorName)), inputErrorOwner && /*#__PURE__*/React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 27\n    }\n  }, inputErrorOwner), inputErrorName && /*#__PURE__*/React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 26\n    }\n  }, inputErrorName), /*#__PURE__*/React.createElement(Repositories, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, repositories.map(repository => /*#__PURE__*/React.createElement(\"a\", {\n    key: repository.full_name,\n    href: \"teste\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: repository.owner.avatar_url,\n    alt: repository.owner.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, repository.full_name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, repository.description)), /*#__PURE__*/React.createElement(FiChevronRight, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/procopio/Projetos/goStack/primeiro-projeto-react/src/pages/Dashboard/index.tsx"],"names":["React","useState","FiChevronRight","api","Title","Form","Repositories","DivError","Error","Dashboard","newRepoOwner","setNewRepoOwner","newRepoName","setNewRepoName","inputErrorOwner","setInputErrorOwner","inputErrorName","setInputErrorName","repositories","setRepositories","handleAddRepository","event","preventDefault","response","get","repository","data","e","logoImg","target","value","map","full_name","owner","avatar_url","login","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAOC,GAAP,MAAgB,oBAAhB;;AAIA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,YAAtB,EAAoCC,QAApC,EAA8CC,KAA9C,QAA2D,UAA3D;;AAWA,MAAMC,SAAmB,GAAG,MAAM;AAChC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACa,eAAD,EAAkBC,kBAAlB,IAAwCd,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACe,cAAD,EAAiBC,iBAAjB,IAAsChB,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACiB,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,CAAe,EAAf,CAAhD;;AAEA,iBAAemB,mBAAf,CACEC,KADF,EAEiB;AACfA,IAAAA,KAAK,CAACC,cAAN;AACAL,IAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAF,IAAAA,kBAAkB,CAAC,EAAD,CAAlB;;AACA,QAAI,CAACL,YAAL,EAAmB;AACjBK,MAAAA,kBAAkB,CAAC,gCAAD,CAAlB;;AACA,UAAI,CAACH,WAAL,EAAkB;AAChBK,QAAAA,iBAAiB,CAAC,+BAAD,CAAjB;AACD;;AACD,aAAO,KAAP;AACD;;AACD,QAAI,CAACL,WAAL,EAAkB;AAChBK,MAAAA,iBAAiB,CAAC,+BAAD,CAAjB;AACA;AACD;;AAED,QAAI;AACF,YAAMM,QAAQ,GAAG,MAAMpB,GAAG,CAACqB,GAAJ,CACpB,SAAQd,YAAa,IAAGE,WAAY,EADhB,CAAvB;AAGA,YAAMa,UAAU,GAAGF,QAAQ,CAACG,IAA5B;AAEAP,MAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBO,UAAlB,CAAD,CAAf;AACAd,MAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD,KATD,CASE,OAAOc,CAAP,EAAU;AACVZ,MAAAA,kBAAkB,CAAC,oDAAD,CAAlB;AACAE,MAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACD;AACF;;AAED,sBACE,uDACE;AAAK,IAAA,GAAG,EAAEW,OAAV;AAAmB,IAAA,GAAG,EAAC,iBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAFF,eAIE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAER,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,KAAK,EAAEV,YADT;AAEE,IAAA,QAAQ,EAAGiB,CAAD,IAAOhB,eAAe,CAACgB,CAAC,CAACE,MAAF,CAASC,KAAV,CAFlC;AAGE,IAAA,WAAW,EAAC,6BAHd;AAIE,IAAA,IAAI,EAAC,MAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE;AACE,IAAA,KAAK,EAAElB,WADT;AAEE,IAAA,QAAQ,EAAGe,CAAD,IAAOd,cAAc,CAACc,CAAC,CAACE,MAAF,CAASC,KAAV,CAFjC;AAGE,IAAA,WAAW,EAAC,iCAHd;AAIE,IAAA,IAAI,EAAC,MAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eAcE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAdF,CAJF,EAqBGd,cAAc,IAAIF,eAAlB,iBACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,eAAR,CADF,eAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQE,cAAR,CAFF,CAtBJ,EA2BGF,eAAe,iBAAI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,eAAR,CA3BtB,EA4BGE,cAAc,iBAAI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,cAAR,CA5BrB,eA8BE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,YAAY,CAACa,GAAb,CAAkBN,UAAD,iBAChB;AAAG,IAAA,GAAG,EAAEA,UAAU,CAACO,SAAnB;AAA8B,IAAA,IAAI,EAAC,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAEP,UAAU,CAACQ,KAAX,CAAiBC,UADxB;AAEE,IAAA,GAAG,EAAET,UAAU,CAACQ,KAAX,CAAiBE,KAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASV,UAAU,CAACO,SAApB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,UAAU,CAACW,WAAf,CAFF,CALF,eAUE,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADD,CADH,CA9BF,CADF;AAiDD,CAzFD;;AA2FA,eAAe3B,SAAf","sourcesContent":["import React, { useState, FormEvent } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\nimport api from '../../services/api';\n\nimport logoImg from '../../assets/logo.svg';\n\nimport { Title, Form, Repositories, DivError, Error } from './styles';\n\ninterface Repository {\n  full_name: string;\n  description: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\nconst Dashboard: React.FC = () => {\n  const [newRepoOwner, setNewRepoOwner] = useState('');\n  const [newRepoName, setNewRepoName] = useState('');\n  const [inputErrorOwner, setInputErrorOwner] = useState('');\n  const [inputErrorName, setInputErrorName] = useState('');\n  const [repositories, setRepositories] = useState<Repository[]>([]);\n\n  async function handleAddRepository(\n    event: FormEvent<HTMLFormElement>,\n  ): Promise<void> {\n    event.preventDefault();\n    setInputErrorName('');\n    setInputErrorOwner('');\n    if (!newRepoOwner) {\n      setInputErrorOwner('Digite o autor do repositório!');\n      if (!newRepoName) {\n        setInputErrorName('Digite o nome do repositório!');\n      }\n      return false;\n    }\n    if (!newRepoName) {\n      setInputErrorName('Digite o nome do repositório!');\n      return;\n    }\n\n    try {\n      const response = await api.get<Repository>(\n        `repos/${newRepoOwner}/${newRepoName}`,\n      );\n      const repository = response.data;\n\n      setRepositories([...repositories, repository]);\n      setNewRepoOwner('');\n      setNewRepoName('');\n    } catch (e) {\n      setInputErrorOwner('Autor/repositório não encontrado. Tente novamente!');\n      setInputErrorName('');\n    }\n  }\n\n  return (\n    <>\n      <img src={logoImg} alt=\"Github Explorer\" />\n      <Title>Explore repositórios no Github</Title>\n\n      <Form onSubmit={handleAddRepository}>\n        <input\n          value={newRepoOwner}\n          onChange={(e) => setNewRepoOwner(e.target.value)}\n          placeholder=\"Digite o nome do usuário\"\n          type=\"text\"\n        />\n\n        <input\n          value={newRepoName}\n          onChange={(e) => setNewRepoName(e.target.value)}\n          placeholder=\"Digite o nome do repositório\"\n          type=\"text\"\n        />\n        <button type=\"submit\">Pesquisar</button>\n      </Form>\n\n      {inputErrorName && inputErrorOwner && (\n        <DivError>\n          <Error>{inputErrorOwner}</Error>\n          <Error>{inputErrorName}</Error>\n        </DivError>\n      )}\n      {inputErrorOwner && <Error>{inputErrorOwner}</Error>}\n      {inputErrorName && <Error>{inputErrorName}</Error>}\n\n      <Repositories>\n        {repositories.map((repository) => (\n          <a key={repository.full_name} href=\"teste\">\n            <img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <div>\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </div>\n\n            <FiChevronRight size={20} />\n          </a>\n        ))}\n      </Repositories>\n    </>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}