{"ast":null,"code":"var _jsxFileName = \"/home/procopio/Projetos/trybe-github/src/pages/Dashboard/index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\nimport { Link } from 'react-router-dom';\nimport api from '../../services/api';\nimport logoImg from '../../assets/trybe.png';\nimport { Title, Form, Repositories, Error } from './styles';\n\nconst Dashboard = () => {\n  const [team, setTeam] = useState('');\n  const [teamStr, setTeamStr] = useState(() => {\n    const storagedTeam = localStorage.getItem('@GithubExplorer:team');\n\n    if (storagedTeam) {\n      return storagedTeam;\n    }\n\n    return '';\n  });\n  const [inputError, setInputError] = useState('');\n  const [repositories, setRepositories] = useState(() => {\n    const storagedRepositories = localStorage.getItem('@GithubExplorer:repositories');\n\n    if (storagedRepositories) {\n      return JSON.parse(storagedRepositories);\n    }\n\n    return [];\n  });\n  useEffect(() => {\n    localStorage.setItem('@GithubExplorer:repositories', JSON.stringify(repositories));\n  }, [repositories]);\n\n  async function handleAddRepository(event) {\n    event.preventDefault();\n    setInputError('');\n    localStorage.setItem('@GithubExplorer:team', team);\n\n    if (!team) {\n      setInputError('Digite o número da turma!');\n      return false;\n    }\n\n    try {\n      const name = `sd-0${team}`;\n      const response1 = await api.get(`users/tryber/repos?sort=created&per_page=100&page=1`);\n      const response2 = await api.get(`users/tryber/repos?sort=created&per_page=100&page=2`);\n      const allRepositories = response1.data.concat(response2.data);\n      const repositoriesFromTeam = [];\n\n      for (const rep of allRepositories) {\n        const repName = rep.name;\n\n        if (repName.startsWith(name) && !repName.endsWith('tests')) {\n          repositoriesFromTeam.push(rep);\n        }\n\n        if (repName === \"sd-04-block7-project-daily-prophet-tests\") {\n          repositoriesFromTeam.push(rep);\n        }\n      }\n\n      setTeamStr(team);\n      setRepositories(repositoriesFromTeam);\n      setTeam('');\n      setInputError('');\n    } catch (e) {\n      setInputError('Erro! Turma não encontrada, por favor, digite o número da turma (1-5).');\n    }\n\n    return true;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    width: 150,\n    alt: \"Trybe - Projects Explorer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, \"Acompanhe os projetos Trybe\"), /*#__PURE__*/React.createElement(Form, {\n    hasError: !!inputError,\n    onSubmit: handleAddRepository,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: team,\n    onChange: e => setTeam(e.target.value),\n    placeholder: \"Digite a turma: (ex.: 1)\",\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, \"Pesquisar\")), inputError && /*#__PURE__*/React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 22\n    }\n  }, inputError), /*#__PURE__*/React.createElement(Repositories, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, teamStr && /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, \"Turma \", teamStr), repositories.map(repository => /*#__PURE__*/React.createElement(Link, {\n    key: repository.full_name,\n    to: `/repository/${repository.full_name}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: repository.owner.avatar_url,\n    alt: repository.owner.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, repository.name)), /*#__PURE__*/React.createElement(FiChevronRight, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/procopio/Projetos/trybe-github/src/pages/Dashboard/index.tsx"],"names":["React","useState","useEffect","FiChevronRight","Link","api","logoImg","Title","Form","Repositories","Error","Dashboard","team","setTeam","teamStr","setTeamStr","storagedTeam","localStorage","getItem","inputError","setInputError","repositories","setRepositories","storagedRepositories","JSON","parse","setItem","stringify","handleAddRepository","event","preventDefault","name","response1","get","response2","allRepositories","data","concat","repositoriesFromTeam","rep","repName","startsWith","endsWith","push","e","target","value","map","repository","full_name","owner","avatar_url","login"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, FormEvent } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\nimport { Link } from 'react-router-dom';\nimport api from '../../services/api';\n\nimport logoImg from '../../assets/trybe.png';\n\nimport { Title, Form, Repositories, Error } from './styles';\n\ninterface Repository {\n  full_name: string;\n  name: string;\n  description: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\nconst Dashboard: React.FC = () => {\n  const [team, setTeam] = useState('');\n  const [teamStr, setTeamStr] = useState(() => {\n    const storagedTeam = localStorage.getItem('@GithubExplorer:team');\n    if (storagedTeam) {\n      return storagedTeam;\n    }\n    return '';\n  });\n  const [inputError, setInputError] = useState('');\n  const [repositories, setRepositories] = useState<Repository[]>(() => {\n    const storagedRepositories = localStorage.getItem(\n      '@GithubExplorer:repositories',\n    );\n    if (storagedRepositories) {\n      return JSON.parse(storagedRepositories);\n    }\n    return [];\n  });\n\n  useEffect(() => {\n    localStorage.setItem(\n      '@GithubExplorer:repositories',\n      JSON.stringify(repositories),\n    );\n  }, [repositories]);\n\n  async function handleAddRepository(\n    event: FormEvent<HTMLFormElement>,\n  ): Promise<boolean> {\n    event.preventDefault();\n    setInputError('');\n\n    localStorage.setItem('@GithubExplorer:team', team);\n\n    if (!team) {\n      setInputError('Digite o número da turma!');\n      return false;\n    }\n\n    try {\n      const name = `sd-0${team}`;\n      const response1 = await api.get<Repository[]>(\n        `users/tryber/repos?sort=created&per_page=100&page=1`,\n      );\n      const response2 = await api.get<Repository[]>(\n        `users/tryber/repos?sort=created&per_page=100&page=2`,\n      );\n      const allRepositories = response1.data.concat(response2.data);\n\n      const repositoriesFromTeam = [];\n\n      for (const rep of allRepositories) {\n        const repName = rep.name;\n        if (repName.startsWith(name) && !repName.endsWith('tests')) {\n          repositoriesFromTeam.push(rep);\n        }\n        if(repName === \"sd-04-block7-project-daily-prophet-tests\"){\n          repositoriesFromTeam.push(rep);\n        }\n      }\n      setTeamStr(team);\n      setRepositories(repositoriesFromTeam);\n      setTeam('');\n      setInputError('');\n    } catch (e) {\n      setInputError(\n        'Erro! Turma não encontrada, por favor, digite o número da turma (1-5).',\n      );\n    }\n    return true;\n  }\n\n  return (\n    <>\n      <img src={logoImg} width={150} alt=\"Trybe - Projects Explorer\" />\n      <Title>Acompanhe os projetos Trybe</Title>\n\n      <Form hasError={!!inputError} onSubmit={handleAddRepository}>\n        <input\n          value={team}\n          onChange={(e) => setTeam(e.target.value)}\n          placeholder=\"Digite a turma: (ex.: 1)\"\n          type=\"number\"\n        />\n        <button type=\"submit\">Pesquisar</button>\n      </Form>\n\n      {inputError && <Error>{inputError}</Error>}\n\n      <Repositories>\n        {teamStr && <h2>Turma {teamStr}</h2>}\n        {repositories.map((repository) => (\n            <Link\n              key={repository.full_name}\n              to={`/repository/${repository.full_name}`}\n            >\n              <img\n                src={repository.owner.avatar_url}\n                alt={repository.owner.login}\n              />\n              <div>\n                <strong>{repository.name}</strong>\n              </div>\n              <FiChevronRight size={20} />\n            </Link>\n        ))}\n      </Repositories>\n    </>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}