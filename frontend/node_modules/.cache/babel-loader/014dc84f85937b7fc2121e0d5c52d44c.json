{"ast":null,"code":"var _jsxFileName = \"/home/procopio/Projetos/trybe-github/src/pages/Repository/index.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useRouteMatch, Link } from 'react-router-dom';\nimport { FiChevronLeft, FiChevronRight, FiUsers } from 'react-icons/fi';\nimport Modal from 'react-bootstrap/Modal';\nimport api, { my_api } from '../../services/api';\nimport logoImg from '../../assets/trybe.png';\nimport { Header, RepositoryInfo, Issues } from './styles';\n\nconst Repository = () => {\n  const {\n    params\n  } = useRouteMatch();\n  const [repository, setRepository] = useState(null);\n  const [pullRequests, setPullRequests] = useState([]);\n  const [helpNumber, setHelpNumber] = useState(0);\n  const [crNumber, setCrNumber] = useState(0);\n  const [dataToShow, setDataToShow] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  useEffect(() => {\n    api.get(`repos/${params.repository}`).then(response => {\n      setRepository(response.data);\n    });\n    api.get(`repos/${params.repository}/pulls?per_page=100`).then(response => {\n      setPullRequests(response.data);\n    });\n  }, [params.repository]);\n  useEffect(() => {\n    let helps = 0;\n    let crs = 0;\n\n    for (let pull of pullRequests) {\n      pull.helpWanted = false;\n      pull.codeReview = false;\n      pull.jaTemDupla = false;\n\n      if (pull.labels.length > 0) {\n        for (let i = 0; i < pull.labels.length; i++) {\n          if (pull.labels[i].name === 'help wanted') {\n            helps++;\n            pull.helpWanted = true;\n          }\n\n          if (pull.labels[i].name === 'code-review') {\n            crs++;\n            pull.codeReview = true; // setPullRequestsWithCRRequest([...pullRequestsWithCRRequest, pull]);\n          }\n        }\n      }\n    }\n\n    setDataToShow(pullRequests);\n    setCrNumber(crs);\n    setHelpNumber(helps);\n  }, [pullRequests]);\n\n  function shuffle(array) {\n    let currentIndex = array.length,\n        temporaryValue,\n        randomIndex;\n\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n\n  async function updateDuplas() {\n    const prWithCr = pullRequests.filter(pull => pull.codeReview);\n    const randomPrWithCr = shuffle(prWithCr);\n    const duplas = await my_api.get(`/${repository === null || repository === void 0 ? void 0 : repository.id}`);\n    const uniquesPr = randomPrWithCr.filter(pull => duplas.dupla1 !== pull.user.login && duplas.dupla2 !== pull.user.login);\n    console.log(uniquesPr);\n\n    if (uniquesPr.length % 2 === 0) {\n      for (let i = 0; i < uniquesPr.length; i += 2) {\n        await my_api.post(`/${repository === null || repository === void 0 ? void 0 : repository.id}`, {\n          dupla1: uniquesPr[i].user.login,\n          dupla2: uniquesPr[i + 1].user.login\n        });\n      }\n    } else {\n      for (let i = 0; i < uniquesPr.length - 1; i += 2) {\n        await my_api.post(`/${repository === null || repository === void 0 ? void 0 : repository.id}`, {\n          dupla1: uniquesPr[i].user.login,\n          dupla2: uniquesPr[i + 1].user.login\n        });\n      }\n    }\n  }\n\n  async function handleDuplasButton() {\n    handleOpenModal();\n    updateDuplas();\n  }\n\n  const handleOpenModal = () => setShowModal(true);\n\n  const handleCloseModal = () => setShowModal(false);\n\n  function handleHelpButton() {\n    const newPullRequests = pullRequests.filter(pull => pull.helpWanted);\n    setDataToShow(newPullRequests);\n  }\n\n  function handleCRButton() {\n    const newPullRequests = pullRequests.filter(pull => pull.codeReview);\n    setDataToShow(newPullRequests);\n  }\n\n  function handlePRButton() {\n    setDataToShow(pullRequests);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    width: 150,\n    alt: \"Trybe - Projects Explorer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/trybe-projects\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FiChevronLeft, {\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }), \"Voltar\")), repository && /*#__PURE__*/React.createElement(RepositoryInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: repository.owner.avatar_url,\n    alt: repository.owner.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }, repository.name)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleDuplasButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FiUsers, {\n    size: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }), \"Ver duplas de CR\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: handleHelpButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, helpNumber), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, \"Pedido(s) de ajuda\"))), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: handleCRButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, crNumber), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, \"Pedido(s) de Code Review\"))), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: handlePRButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  }, repository.open_issues_count), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }, \"Pull Requests\"))))), /*#__PURE__*/React.createElement(Modal, {\n    show: showModal,\n    onHide: handleCloseModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  }, \"Modal heading\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }\n  }, \"Woohoo, you're reading this text in a modal!\")), /*#__PURE__*/React.createElement(Issues, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }\n  }, dataToShow.filter(pull => {\n    return pull.user.login !== 'tryber';\n  }).sort((a, b) => {\n    if (a.codeReview && !b.codeReview) {\n      return -1;\n    }\n\n    if (a.helpWanted && !b.helpWanted) {\n      return -1;\n    }\n\n    return 1;\n  }).map(pull => /*#__PURE__*/React.createElement(\"a\", {\n    key: pull.id,\n    href: pull.html_url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: pull.user.avatar_url,\n    alt: pull.user.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }\n  }, pull.user.login), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }\n  }, pull.title)), pull.helpWanted && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 35\n    }\n  }, \"Ajuda\"), pull.codeReview && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 35\n    }\n  }, \"Code Review\"), /*#__PURE__*/React.createElement(FiChevronRight, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default Repository;","map":{"version":3,"sources":["/home/procopio/Projetos/trybe-github/src/pages/Repository/index.tsx"],"names":["React","useEffect","useState","useRouteMatch","Link","FiChevronLeft","FiChevronRight","FiUsers","Modal","api","my_api","logoImg","Header","RepositoryInfo","Issues","Repository","params","repository","setRepository","pullRequests","setPullRequests","helpNumber","setHelpNumber","crNumber","setCrNumber","dataToShow","setDataToShow","showModal","setShowModal","get","then","response","data","helps","crs","pull","helpWanted","codeReview","jaTemDupla","labels","length","i","name","shuffle","array","currentIndex","temporaryValue","randomIndex","Math","floor","random","updateDuplas","prWithCr","filter","randomPrWithCr","duplas","id","uniquesPr","dupla1","user","login","dupla2","console","log","post","handleDuplasButton","handleOpenModal","handleCloseModal","handleHelpButton","newPullRequests","handleCRButton","handlePRButton","owner","avatar_url","open_issues_count","sort","a","b","map","html_url","title"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useRouteMatch, Link } from 'react-router-dom';\nimport { FiChevronLeft, FiChevronRight, FiUsers } from 'react-icons/fi';\nimport Modal from 'react-bootstrap/Modal';\n\nimport api, { my_api } from '../../services/api';\n\nimport logoImg from '../../assets/trybe.png';\n\nimport { Header, RepositoryInfo, Issues } from './styles';\n\ninterface RepositoryParams {\n  repository: string;\n}\n\ninterface Repository {\n  id: number;\n  full_name: string;\n  name: string;\n  description: string;\n  stargazers_count: number;\n  forks_count: number;\n  open_issues_count: number;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\ninterface PullRequest {\n  title: string;\n  id: number;\n  html_url: string;\n  mergeable_state: string | undefined;\n  user: {\n    login: string;\n    url: string;\n    avatar_url: string;\n  };\n  number: number;\n  labels: [\n    {\n      name: string;\n    },\n  ];\n  codeReview: boolean;\n  helpWanted: boolean;\n  jaTemDupla: boolean;\n}\n\ninterface Dupla {\n  dupla1: string;\n  dupla2: string;\n}\n\nconst Repository: React.FC = () => {\n  const { params } = useRouteMatch<RepositoryParams>();\n\n  const [repository, setRepository] = useState<Repository | null>(null);\n  const [pullRequests, setPullRequests] = useState<PullRequest[]>([]);\n  const [helpNumber, setHelpNumber] = useState(0);\n  const [crNumber, setCrNumber] = useState(0);\n\n  const [dataToShow, setDataToShow] = useState<PullRequest[]>([]);\n  const [showModal, setShowModal] = useState<Boolean>(false);\n\n  useEffect(() => {\n    api.get(`repos/${params.repository}`).then((response) => {\n      setRepository(response.data);\n    });\n    api\n      .get(`repos/${params.repository}/pulls?per_page=100`)\n      .then((response) => {\n        setPullRequests(response.data);\n      });\n\n  }, [params.repository]);\n  useEffect(() => {\n    let helps = 0;\n    let crs = 0;\n    for (let pull of pullRequests) {\n      pull.helpWanted = false;\n      pull.codeReview = false;\n      pull.jaTemDupla = false;\n      if (pull.labels.length > 0) {\n        for (let i = 0; i < pull.labels.length; i++) {\n          if (pull.labels[i].name === 'help wanted') {\n            helps++;\n            pull.helpWanted = true;\n          }\n          if (pull.labels[i].name === 'code-review') {\n            crs++;\n            pull.codeReview = true;\n            // setPullRequestsWithCRRequest([...pullRequestsWithCRRequest, pull]);\n          }\n        }\n      }\n    }\n\n    setDataToShow(pullRequests);\n    setCrNumber(crs);\n    setHelpNumber(helps);\n  }, [pullRequests]);\n\n  function shuffle(array: PullRequest[]) {\n    let currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n\n  async function updateDuplas() {\n    const prWithCr = pullRequests.filter((pull) => pull.codeReview);\n    const randomPrWithCr = shuffle(prWithCr);\n    const duplas: Dupla = await my_api.get(`/${repository?.id}`);\n\n    const uniquesPr = randomPrWithCr.filter(\n      (pull) =>\n        duplas.dupla1 !== pull.user.login && duplas.dupla2 !== pull.user.login,\n    );\n    console.log(uniquesPr);\n    if (uniquesPr.length % 2 === 0) {\n      for (let i = 0; i < uniquesPr.length; i += 2) {\n        await my_api.post(`/${repository?.id}`, {\n          dupla1: uniquesPr[i].user.login,\n          dupla2: uniquesPr[i + 1].user.login,\n        });\n      }\n    } else {\n      for (let i = 0; i < uniquesPr.length - 1; i += 2) {\n        await my_api.post(`/${repository?.id}`, {\n          dupla1: uniquesPr[i].user.login,\n          dupla2: uniquesPr[i + 1].user.login,\n        });\n      }\n    }\n  }\n\n  async function handleDuplasButton() {\n    handleOpenModal();\n    updateDuplas();\n\n  }\n\n  const handleOpenModal = () => setShowModal(true);\n  const handleCloseModal = () => setShowModal(false);\n\n  function handleHelpButton() {\n    const newPullRequests = pullRequests.filter((pull) => pull.helpWanted);\n    setDataToShow(newPullRequests);\n  }\n  function handleCRButton() {\n    const newPullRequests = pullRequests.filter((pull) => pull.codeReview);\n    setDataToShow(newPullRequests);\n  }\n  function handlePRButton() {\n    setDataToShow(pullRequests);\n  }\n\n  return (\n    <>\n      <Header>\n        <img src={logoImg} width={150} alt=\"Trybe - Projects Explorer\" />\n        <Link to=\"/trybe-projects\">\n          <FiChevronLeft size={16} />\n          Voltar\n        </Link>\n      </Header>\n\n      {repository && (\n        <RepositoryInfo>\n          <header>\n            <img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <div>\n              <strong>{repository.name}</strong>\n            </div>\n            <button onClick={handleDuplasButton}>\n              <FiUsers size={24} />\n              Ver duplas de CR\n            </button>\n          </header>\n          <ul>\n            <li>\n              <Link to=\"#\" onClick={handleHelpButton}>\n                <strong>{helpNumber}</strong>\n                <span>Pedido(s) de ajuda</span>\n              </Link>\n            </li>\n            <li>\n              <Link to=\"#\" onClick={handleCRButton}>\n                <strong>{crNumber}</strong>\n                <span>Pedido(s) de Code Review</span>\n              </Link>\n            </li>\n            <li>\n              <Link to=\"#\" onClick={handlePRButton}>\n                <strong>{repository.open_issues_count}</strong>\n                <span>Pull Requests</span>\n              </Link>\n            </li>\n          </ul>\n        </RepositoryInfo>\n      )}\n\n      <Modal show={showModal} onHide={handleCloseModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Modal heading</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n      </Modal>\n\n      <Issues>\n        {dataToShow\n          .filter((pull) => {\n            return pull.user.login !== 'tryber';\n          })\n          .sort((a, b): number => {\n            if (a.codeReview && !b.codeReview) {\n              return -1;\n            }\n            if (a.helpWanted && !b.helpWanted) {\n              return -1;\n            }\n            return 1;\n          })\n          .map((pull) => (\n            <a key={pull.id} href={pull.html_url}>\n              <img src={pull.user.avatar_url} alt={pull.user.login} />\n              <div>\n                <strong>{pull.user.login}</strong>\n                <p>{pull.title}</p>\n              </div>\n              {pull.helpWanted && <span className=\"red\">Ajuda</span>}\n              {pull.codeReview && <span className=\"green\">Code Review</span>}\n              <FiChevronRight size={20} />\n            </a>\n          ))}\n      </Issues>\n    </>\n  );\n};\n\nexport default Repository;\n"]},"metadata":{},"sourceType":"module"}