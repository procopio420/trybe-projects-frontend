{"ast":null,"code":"var _jsxFileName = \"/home/procopio/Projetos/trybe-github/src/pages/Repository/index.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useRouteMatch, Link } from 'react-router-dom';\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi';\nimport api from '../../services/api';\nimport logoImg from '../../assets/trybe.png';\nimport { Header, RepositoryInfo, Issues } from './styles';\n\nconst Repository = () => {\n  const {\n    params\n  } = useRouteMatch();\n  const [repository, setRepository] = useState(null);\n  const [pullRequests, setPullRequests] = useState([]);\n  const [details, setDetails] = useState(null);\n  useEffect(() => {\n    api.get(`repos/${params.repository}`).then(response => {\n      setRepository(response.data);\n    });\n    api.get(`repos/${params.repository}/pulls?per_page=100`).then(response => {\n      setPullRequests(response.data);\n    });\n  }, [params.repository]);\n  console.log(pullRequests);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    width: 150,\n    alt: \"Github Explorer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FiChevronLeft, {\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), \"Voltar\")), repository && /*#__PURE__*/React.createElement(RepositoryInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: repository.owner.avatar_url,\n    alt: repository.owner.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, repository.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, repository.description))), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, repository.stargazers_count), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, \"Stars\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, repository.forks_count), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, \"Forks\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, repository.open_issues_count), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, \"Pull Requests\")))), /*#__PURE__*/React.createElement(Issues, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, pullRequests.filter(pull => {\n    return pull.user.login !== 'tryber';\n  }).map(pull => /*#__PURE__*/React.createElement(\"a\", {\n    key: pull.id,\n    href: pull.html_url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: pull.user.avatar_url,\n    alt: pull.user.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, pull.user.login), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, pull.title)), pull.labels.length > 0 && pull.labels[0].name === 'help wanted' && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 78\n    }\n  }, \"Ajuda!\"), /*#__PURE__*/React.createElement(FiChevronRight, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default Repository;","map":{"version":3,"sources":["/home/procopio/Projetos/trybe-github/src/pages/Repository/index.tsx"],"names":["React","useEffect","useState","useRouteMatch","Link","FiChevronLeft","FiChevronRight","api","logoImg","Header","RepositoryInfo","Issues","Repository","params","repository","setRepository","pullRequests","setPullRequests","details","setDetails","get","then","response","data","console","log","owner","avatar_url","login","name","description","stargazers_count","forks_count","open_issues_count","filter","pull","user","map","id","html_url","title","labels","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useRouteMatch, Link } from 'react-router-dom';\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi';\nimport api from '../../services/api';\n\nimport logoImg from '../../assets/trybe.png';\n\nimport { Header, RepositoryInfo, Issues } from './styles';\n\ninterface RepositoryParams {\n  repository: string;\n}\n\ninterface Repository {\n  full_name: string;\n  name: string;\n  description: string;\n  stargazers_count: number;\n  forks_count: number;\n  open_issues_count: number;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\ninterface PullRequest {\n  title: string;\n  id: number;\n  html_url: string;\n  mergeable_state: string | undefined;\n  user: {\n    login: string;\n    url: string;\n    avatar_url: string;\n  };\n  number: number;\n  labels: [\n    {\n      name: string;\n    },\n  ];\n}\n\ninterface User {\n  login: string;\n  name: string;\n}\n\nconst Repository: React.FC = () => {\n  const { params } = useRouteMatch<RepositoryParams>();\n\n  const [repository, setRepository] = useState<Repository | null>(null);\n  const [pullRequests, setPullRequests] = useState<PullRequest[]>([]);\n  const [details, setDetails] = useState<PullRequest | null>(null);\n\n  useEffect(() => {\n    api.get(`repos/${params.repository}`).then((response) => {\n      setRepository(response.data);\n    });\n    api\n      .get(`repos/${params.repository}/pulls?per_page=100`)\n      .then((response) => {\n        setPullRequests(response.data);\n      });\n  }, [params.repository]);\n\n  console.log(pullRequests);\n\n  return (\n    <>\n      <Header>\n        <img src={logoImg} width={150} alt=\"Github Explorer\" />\n        <Link to=\"/\">\n          <FiChevronLeft size={16} />\n          Voltar\n        </Link>\n      </Header>\n\n      {repository && (\n        <RepositoryInfo>\n          <header>\n            <img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <div>\n              <strong>{repository.name}</strong>\n              <p>{repository.description}</p>\n            </div>\n          </header>\n          <ul>\n            <li>\n              <strong>{repository.stargazers_count}</strong>\n              <span>Stars</span>\n            </li>\n            <li>\n              <strong>{repository.forks_count}</strong>\n              <span>Forks</span>\n            </li>\n            <li>\n              <strong>{repository.open_issues_count}</strong>\n              <span>Pull Requests</span>\n            </li>\n          </ul>\n        </RepositoryInfo>\n      )}\n\n      <Issues>\n        {pullRequests\n          .filter((pull) => {\n            return pull.user.login !== 'tryber';\n          })\n          .map((pull) => (\n            <a key={pull.id} href={pull.html_url}>\n              <img src={pull.user.avatar_url} alt={pull.user.login} />\n              <div>\n                <strong>{pull.user.login}</strong>\n                <p>{pull.title}</p>\n              </div>\n              {pull.labels.length>0 && pull.labels[0].name==='help wanted' &&<p>Ajuda!</p>}\n              <FiChevronRight size={20} />\n            </a>\n          ))}\n      </Issues>\n    </>\n  );\n};\n\nexport default Repository;\n"]},"metadata":{},"sourceType":"module"}