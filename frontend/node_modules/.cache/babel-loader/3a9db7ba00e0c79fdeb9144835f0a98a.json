{"ast":null,"code":"import _regeneratorRuntime from\"/home/procopio/Projetos/trybe-github/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _createForOfIteratorHelper from\"/home/procopio/Projetos/trybe-github/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _asyncToGenerator from\"/home/procopio/Projetos/trybe-github/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/procopio/Projetos/trybe-github/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{FiChevronRight}from'react-icons/fi';import{Link}from'react-router-dom';import api from'../../services/api';import logoImg from'../../assets/trybe.png';import{Title,Form,Repositories,Error}from'./styles';var Dashboard=function Dashboard(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),team=_useState2[0],setTeam=_useState2[1];var _useState3=useState(function(){var storagedTeam=localStorage.getItem('@GithubExplorer:team');if(storagedTeam){return storagedTeam;}return'';}),_useState4=_slicedToArray(_useState3,2),teamStr=_useState4[0],setTeamStr=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),inputError=_useState6[0],setInputError=_useState6[1];var _useState7=useState(function(){var storagedRepositories=localStorage.getItem('@GithubExplorer:repositories');if(storagedRepositories){return JSON.parse(storagedRepositories);}return[];}),_useState8=_slicedToArray(_useState7,2),repositories=_useState8[0],setRepositories=_useState8[1];useEffect(function(){localStorage.setItem('@GithubExplorer:repositories',JSON.stringify(repositories));},[repositories]);function handleAddRepository(_x){return _handleAddRepository.apply(this,arguments);}function _handleAddRepository(){_handleAddRepository=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var name,response1,response2,allRepositories,repositoriesFromTeam,_iterator,_step,rep,repName;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();setInputError('');localStorage.setItem('@GithubExplorer:team',team);if(team){_context.next=6;break;}setInputError('Digite o número da turma!');return _context.abrupt(\"return\",false);case 6:_context.prev=6;name=\"sd-0\".concat(team);_context.next=10;return api.get(\"users/tryber/repos?sort=created&per_page=100&page=1\");case 10:response1=_context.sent;_context.next=13;return api.get(\"users/tryber/repos?sort=created&per_page=100&page=2\");case 13:response2=_context.sent;allRepositories=response1.data.concat(response2.data);repositoriesFromTeam=[];_iterator=_createForOfIteratorHelper(allRepositories);try{for(_iterator.s();!(_step=_iterator.n()).done;){rep=_step.value;repName=rep.name;if(repName.startsWith(name)&&!repName.endsWith('tests')){repositoriesFromTeam.push(rep);}}}catch(err){_iterator.e(err);}finally{_iterator.f();}setTeamStr(team);setRepositories(repositoriesFromTeam);setTeam('');setInputError('');_context.next=27;break;case 24:_context.prev=24;_context.t0=_context[\"catch\"](6);setInputError('Erro! Turma não encontrada, por favor, digite o número da turma (1-5).');case 27:return _context.abrupt(\"return\",true);case 28:case\"end\":return _context.stop();}}},_callee,null,[[6,24]]);}));return _handleAddRepository.apply(this,arguments);}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"img\",{src:logoImg,width:150,alt:\"Trybe - Projects Explorer\"}),/*#__PURE__*/React.createElement(Title,null,\"Acompanhe os projetos Trybe\"),/*#__PURE__*/React.createElement(Form,{hasError:!!inputError,onSubmit:handleAddRepository},/*#__PURE__*/React.createElement(\"input\",{value:team,onChange:function onChange(e){return setTeam(e.target.value);},placeholder:\"Digite a turma: (ex.: 1)\",type:\"number\"}),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"Pesquisar\")),inputError&&/*#__PURE__*/React.createElement(Error,null,inputError),/*#__PURE__*/React.createElement(Repositories,null,teamStr&&/*#__PURE__*/React.createElement(\"h2\",null,\"Turma \",teamStr),repositories.map(function(repository){return/*#__PURE__*/React.createElement(Link,{key:repository.full_name,to:\"/repository/\".concat(repository.full_name)},/*#__PURE__*/React.createElement(\"img\",{src:repository.owner.avatar_url,alt:repository.owner.login}),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"strong\",null,repository.name)),/*#__PURE__*/React.createElement(FiChevronRight,{size:20}));})));};export default Dashboard;","map":{"version":3,"sources":["/home/procopio/Projetos/trybe-github/src/pages/Dashboard/index.tsx"],"names":["React","useState","useEffect","FiChevronRight","Link","api","logoImg","Title","Form","Repositories","Error","Dashboard","team","setTeam","storagedTeam","localStorage","getItem","teamStr","setTeamStr","inputError","setInputError","storagedRepositories","JSON","parse","repositories","setRepositories","setItem","stringify","handleAddRepository","event","preventDefault","name","get","response1","response2","allRepositories","data","concat","repositoriesFromTeam","rep","repName","startsWith","endsWith","push","e","target","value","map","repository","full_name","owner","avatar_url","login"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, FormEvent } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\nimport { Link } from 'react-router-dom';\nimport api from '../../services/api';\n\nimport logoImg from '../../assets/trybe.png';\n\nimport { Title, Form, Repositories, Error } from './styles';\n\ninterface Repository {\n  full_name: string;\n  name: string;\n  description: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\nconst Dashboard: React.FC = () => {\n  const [team, setTeam] = useState('');\n  const [teamStr, setTeamStr] = useState(() => {\n    const storagedTeam = localStorage.getItem('@GithubExplorer:team');\n    if (storagedTeam) {\n      return storagedTeam;\n    }\n    return '';\n  });\n  const [inputError, setInputError] = useState('');\n  const [repositories, setRepositories] = useState<Repository[]>(() => {\n    const storagedRepositories = localStorage.getItem(\n      '@GithubExplorer:repositories',\n    );\n    if (storagedRepositories) {\n      return JSON.parse(storagedRepositories);\n    }\n    return [];\n  });\n\n  useEffect(() => {\n    localStorage.setItem(\n      '@GithubExplorer:repositories',\n      JSON.stringify(repositories),\n    );\n  }, [repositories]);\n\n  async function handleAddRepository(\n    event: FormEvent<HTMLFormElement>,\n  ): Promise<boolean> {\n    event.preventDefault();\n    setInputError('');\n\n    localStorage.setItem('@GithubExplorer:team', team);\n\n    if (!team) {\n      setInputError('Digite o número da turma!');\n      return false;\n    }\n\n    try {\n      const name = `sd-0${team}`;\n      const response1 = await api.get<Repository[]>(\n        `users/tryber/repos?sort=created&per_page=100&page=1`,\n      );\n      const response2 = await api.get<Repository[]>(\n        `users/tryber/repos?sort=created&per_page=100&page=2`,\n      );\n      const allRepositories = response1.data.concat(response2.data);\n\n      const repositoriesFromTeam = [];\n\n      for (const rep of allRepositories) {\n        const repName = rep.name;\n        if (repName.startsWith(name) && !repName.endsWith('tests')) {\n          repositoriesFromTeam.push(rep);\n        }\n      }\n      setTeamStr(team);\n      setRepositories(repositoriesFromTeam);\n      setTeam('');\n      setInputError('');\n    } catch (e) {\n      setInputError(\n        'Erro! Turma não encontrada, por favor, digite o número da turma (1-5).',\n      );\n    }\n    return true;\n  }\n\n  return (\n    <>\n      <img src={logoImg} width={150} alt=\"Trybe - Projects Explorer\" />\n      <Title>Acompanhe os projetos Trybe</Title>\n\n      <Form hasError={!!inputError} onSubmit={handleAddRepository}>\n        <input\n          value={team}\n          onChange={(e) => setTeam(e.target.value)}\n          placeholder=\"Digite a turma: (ex.: 1)\"\n          type=\"number\"\n        />\n        <button type=\"submit\">Pesquisar</button>\n      </Form>\n\n      {inputError && <Error>{inputError}</Error>}\n\n      <Repositories>\n        {teamStr && <h2>Turma {teamStr}</h2>}\n        {repositories.map((repository) => (\n            <Link\n              key={repository.full_name}\n              to={`/repository/${repository.full_name}`}\n            >\n              <img\n                src={repository.owner.avatar_url}\n                alt={repository.owner.login}\n              />\n              <div>\n                <strong>{repository.name}</strong>\n              </div>\n              <FiChevronRight size={20} />\n            </Link>\n        ))}\n      </Repositories>\n    </>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}